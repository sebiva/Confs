#!/bin/bash

if [ ! "$#" == 1 ]
then
    echo "Usage: install [all | zsh | vim | tmux | scripts | dotfiles]"
    exit 1
fi
todo=$1

set -e
shopt -s dotglob # List . files too
BASEPATH=$( cd $(dirname $0) ; pwd -P )

diff_so_fancy_repo="https://raw.githubusercontent.com/so-fancy/diff-so-fancy"
diff_so_fancy_path="master/third_party/build_fatpack/diff-so-fancy"
diff_so_fancy_url="$diff_so_fancy_repo/$diff_so_fancy_path"

###############################################################################

function setupvim {
    echo
    echo "#################"
    echo "Setting up vim"
    echo "#################"

    # colors
    if [ ! -d "$HOME/.vim/colors" ];
    then
        mkdir -p "$HOME/.vim/colors"
    fi
    # vundle
    if [ ! -d "$HOME/.vim/bundle" ];
    then
        echo "Installing Vundle"
        mkdir -p "$HOME/.vim/bundle"
        echo "If the git clone fails, either remove the line about ssh in the"
        echo ".gitconfig file, or generate a pub-key"
        git clone "http://github.com/VundleVim/Vundle.vim.git" "$HOME/.vim/bundle/Vundle.vim"
    fi
    # directory for backup-files
    if [ ! -d "$HOME/tmp" ];
    then
        mkdir -p "$HOME/tmp"
    fi
    installfile "$BASEPATH/dotfiles/" ".vimrc" "$HOME" ".nvimrc"
    vim +PluginInstall +qall
    echo "Plugins installed"
}

function setupzsh {
    echo
    echo "#################"
    echo "Setting up zsh"
    echo "#################"
    if [ ! -d $HOME/.oh-my-zsh ];
    then
        echo "If the git clone fails, either remove the line about ssh in the"
        echo ".gitconfig file, or generate a pub-key"
        git clone https://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh
        echo "oh-my-zsh installed"
    fi

    if [ ! "$(getent passwd $LOGNAME | cut -d: -f7)" = "/bin/zsh" ]
    then
        chsh -s /bin/zsh
        echo "-----------------------------------"
        echo "Logout/login needed to change shell"
        echo "-----------------------------------"
    fi
}

# Installs a FILE from SRCDIR to DESTDIR.
# installfile SRCDIR SRCFILE DESTDIR DESTFILE
function installfile {
    if [ ! "$#" == 4 ]
    then
        echo "Wrong number of arguments to installfile: $@"
        exit 1
    fi
    SRCDIR="$1"
    SRCFILE="$2"
    DESTDIR="$3"
    DESTFILE="$4"
    SRC="$SRCDIR/$SRCFILE"
    DEST="$DESTDIR/$DESTFILE"
    if [ ! -e "$SRC" ]
    then
        echo "File does not exist: $SRC"
        exit 1
    fi
    if [ "$(readlink $DEST)" = "$SRC" ]
    then
        echo "already installed $DESTFILE"
    elif [ -L "$DEST" ]
    then
        OLD=$(readlink $DEST)
        rm "$DEST"
        ln -s "$SRC" "$DEST"
        echo "updated $DESTFILE (pointed to $OLD)"
    elif [ -e "$DEST" ]
    then
        echo "already exists $DESTFILE, skipping"
        diff "$DEST" "$SRC" || :   # Always succeed
    else
        ln -s "$SRC" "$DEST"
        echo "installed $DESTFILE"
    fi
}

# Installs all files in SRCDIR into DESTDIR
# installfiles DESTDIR SRCDIR
function installfiles {
    if [ ! "$#" == 2 ]
    then
        echo "Wrong number of arguments to installfiles: $@"
        exit 1
    fi
    local SRCDIR="$1"
    local DESTDIR="$2"
    echo
    echo "#################"
    echo "Installing files"
    echo "from: $SRCDIR"
    echo "to:   $DESTDIR"
    local FILES=$(ls -A $SRCDIR -I ".*.un~")
    for FILE in $FILES
    do
        # If it's a directory, install them recursively
        echo "Checking $FILE"
        if [ -d "$SRCDIR/$FILE" ];
        then
            mkdir -p "$DESTDIR/$FILE"
            installfiles "$SRCDIR/$FILE" "$DESTDIR/$FILE"
        else
            installfile "$SRCDIR" "$FILE" "$DESTDIR" "$FILE"
        fi
    done
    echo "#################"
}

###############################################################################


echo "Using:"
zsh --version
git --version
vim --version | head -n1


if [ $todo == "all" ] || [ $todo == "dotfiles" ]
then
    echo "Installing dotfiles"
    installfiles $BASEPATH/dotfiles $HOME
fi
if [ $todo == "all" ] || [ $todo == "scripts" ]
then
    echo "Installing scripts"
    mkdir -p $HOME/.scripts
    wget "$diff_so_fancy_url" -P "$HOME/.scripts"
    chmod +x "$HOME/.scripts/diff-so-fancy"
    installfiles $BASEPATH/scripts $HOME/.scripts
fi
if [ $todo == "all" ] || [ $todo == "zsh" ]
then
    echo "Installing zsh"
    setupzsh
fi

if [ $todo == "vim" ]
then
    echo "Installing vim + vimrc"
    installfile "$BASEPATH/dotfiles/" ".vimrc" "$HOME" ".vimrc"
    setupvim
elif [ $todo == "all" ]
then
    echo "Installing vim"
    setupvim
fi

echo "done"
exit 0
